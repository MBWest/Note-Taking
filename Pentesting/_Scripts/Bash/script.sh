#!/bin/bash

#Main menu function - it has read, case and a while loop
main_menu () { while true
do
clear
echo -e "\n--Main Menu--"
echo "0: Basic Information"
echo "1: Update OS"
echo "2: Domain Recon"
echo "E: Exit"
echo "---------------"
read -p "Please enter your choice: " main_menu_choice
case $main_menu_choice in 
    0) basic_information_menu;;
    1) update_menu;;
    2) domain_recon_menu;;
    e|E) exit;;
#
esac
done
}

#####-----BASIC INFORMATION MENU-----#####

##Basic Information Menu
basic_information_menu () { while true
do
echo -e "\n--Basic Information Menu--"
echo "0: Basic Shortcuts"
echo "1: Machine Information"
echo "E: Exit"
echo "M: Go Back to the Main Menu"
echo "---------------"
read -p "Please enter your choice: " basic_information_choice
case $basic_information_choice in 
    0) basic_shortcuts;;
    1) machine_information;;
    e|E) exit;;
    m|M) main_menu;;
#
esac
done
}

##Basic Information Functions

##Basic Shortcuts
basic_shortcuts() {
    clear
    echo -e "\n-----Basic shortcuts-----"
    echo -e "\n"
    echo "-----Clearing the Terminal Screen-----"
    echo "Ctrl+l - Clear the screen"
    echo -e "\n"
    echo "-----Cursor Control While in the Terminal-----"
    echo "Ctrl+a - Move the cursor to the beginning of the line"
    echo "Crtl+e - Move the cursor to the end of the line"
    echo "Ctrl+f - Move the cursor foward one character" 
    echo "Ctrl+b - Move the cursor backwards one character"
    echo "Alt+f - Move the cursor forward one word" 
    echo "Alt+b - Move the cursor backwards one word"
    echo -e "\n"
    echo "-----Character Manipulation-----"
    echo "Ctrl+t - Swaps the current character under the cursor with the preceding one" 
    echo "Alt+t - Swaps the current word under the cursor with the preceding one"
    echo -e "\n"
    echo "-----Text Manipulation-----"
    echo "Ctrl+k - Kill the text from the cursor until the end of the line"
    echo "Ctrl+u - Kill the text from the cursor until the beginning of the line"
    echo "Alt+d - Kill the text from the cursor through the end of the word"
    echo "Ctrl-w or alt-delete - Kill the text from the current cursor through the beginning of the word"
    echo "(Kill-ring) Ctrl+y - Words killed are temporarly stored in the kill-ring and can be brought back" 
}

##Machine Information
machine_information() {
    clear
    echo -e "\n-----Basic Machine Information-----"
    echo "IP Address: " $(hostname -I | cut -d' ' -f1)
    echo "Hostname: " $(hostname)
    echo "Who am I: " $(whoami)
    echo "id: " $(id)
    echo "uname: " $(uname)
}

#####-----UPDATE MENU-----#####

##Update Menu
update_menu () { while true
do
clear
echo -e "\n--Update Menu--"
echo "1: Ubuntu/Debian"
echo "2: Fedora"
echo "3: openSuSe"
echo "4: Manjaro/Arch"
echo "E: Exit"
echo "M: Go Back to the Main Menu"
echo "---------------"
read -p "Please enter your choice: " update_menu_choice
case $update_menu_choice in
    1) ubuntu_debian_update;;
    2) fedora_update;;
    3) opensuse_update;;
    4) manjaro_arch_update;;
    e|E) exit;;
    m|M) main_menu;;
#
esac
done
}

##Update function for Ubuntu/Debian
ubuntu_debian_update() {
    echo "[+] Ubuntu is updating..."
    sudo apt update -y && sudo apt upgrade -y
    echo "[+] Cleaning up..."
    sudo apt clean -y
    sudo apt autoclean -y
    sudo apt autoremove -y 
}

#####-----UPDATE FUNCTIONS-----#####

##Update function for Fedora
fedora_update() {
    echo "[+] Fedora is updating..."
    sudo dnf upgrade -y
}

##Update function for OpenSuSe
opensuse_update() {
    echo "[+] OpenSuSe is updating..."
    sudo zypper refresh -y && sudo zypper update -y
}

##Update function for Manjaro/Arch
manjaro_arch_update() {
    echo "[+] Manjaro/Arch is updating..."
    sudo pacman -Syyu
}

#####-----RECON MENU-----#####

domain_recon_menu () { while true
do
read -p "What domain would you like to recon? " domain_url
url=$domain_url # URL variable for domain recon
regex='^[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]\.[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]$'
if [[ $url =~ $regex ]]
then 
    echo "$url IS valid"
else
    echo "$url IS NOT valid"
    domain_recon_menu
fi
echo -e "\n--Recon Menu--"
echo "1: Harvest Subdomains with Assestfinder"
echo "2: Havest Subdomains with Amass"
echo "3: Check if Recon'd Domains are Alive with httprobe"
echo "E: Exit"
echo "M: Go Back to the Main Menu"
echo "---------------"
read -p "Please enter your choice: " domain_recon_menu_choice
case $domain_recon_menu_choice in
    1) assestfinder_recon;;
    2) amass_recon;;
    3) httprobe_recon;;
    e|E) exit;;
    m|M) main_menu;;
#
esac
done
}

#####-----RECON FUNCTIONS-----#####

#Harvesting subdomains with assetfinder
assestfinder_recon() {
    if [ ! -d "$domain_recon_url" ];then
    mkdir $domain_recon_url
    fi
    if [ ! -d "$domain_recon_url/recon" ];then
    mkdir $domain_recon_url/recon
    fi
    echo "[+] Harvesting subdomains with assetfinder..."
    assetfinder $domain_recon_url >> $domain_recon_url/recon/assests.txt
    cat $domain_recon_url/recon/assests.txt | grep $1 >> $domain_recon_url/recon/final.txt
    rm $domain_recon_url/recon/assests.txt
}

#Harvesting subdomains with amass
amass_recon() {
    if [ ! -d "$domain_recon_url" ];then
    mkdir $domain_recon_url
    fi
    if [ ! -d "$domain_recon_url/recon" ];then
    mkdir $domain_recon_url/recon
    fi
    echo echo "[+] Harvesting subdomains with amass..."
    amass enum -d $domain_recon_url >> $domain_recon_url/recon/f.txt
    sort -u $domain_recon_url/recon/f.txt >> $domain_recon_url/recon/final.txt
    rm $domain_recon_url/recon/f.txt
}

#Check if recon items are alive
httprobe_recon() {
    if [ ! -d "$domain_recon_url" ];then
    mkdir $domain_recon_url
    fi
    if [ ! -d "$domain_recon_url/recon" ];then
    mkdir $domain_recon_url/recon
    fi
    echo "[+] Probing for alive domains..."
    cat $domain_recon_url/recon/final.txt | sort -u | httprobe -s -p https:443 | sed 's/https\?:\/\///' | tr -d ':443' 
>> $domain_recon_url/recon/alive.txt
}

# Call the menu function
main_menu ## Needed to run the menu function